-- ===== SCRIPT DE TESTE: Sistema de Notifica√ß√µes Ativadas/Desativadas =====
-- Data: 09/10/2025
-- Descri√ß√£o: Testes para validar funcionamento do sistema

-- ===== TESTE 1: Verificar se coluna existe =====
SELECT 
    '‚úÖ TESTE 1: Verificar coluna' as teste,
    COLUMN_NAME,
    COLUMN_TYPE,
    COLUMN_DEFAULT,
    IS_NULLABLE,
    COLUMN_COMMENT
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA = DATABASE()
AND TABLE_NAME = 'users'
AND COLUMN_NAME = 'notificacoes_ativadas';

-- ===== TESTE 2: Verificar valores existentes =====
SELECT 
    '‚úÖ TESTE 2: Status atual dos usu√°rios' as teste,
    id,
    name,
    email,
    role,
    status,
    COALESCE(notificacoes_ativadas, 1) as notif_ativadas,
    CASE 
        WHEN COALESCE(notificacoes_ativadas, 1) = 1 THEN 'üîî Sino ATIVO'
        ELSE 'üîï Sino DESATIVADO'
    END as status_sino
FROM users
ORDER BY id;

-- ===== TESTE 3: Contar usu√°rios por status de notifica√ß√£o =====
SELECT 
    '‚úÖ TESTE 3: Estat√≠sticas' as teste,
    COUNT(*) as total_usuarios,
    SUM(CASE WHEN COALESCE(notificacoes_ativadas, 1) = 1 THEN 1 ELSE 0 END) as com_sino,
    SUM(CASE WHEN COALESCE(notificacoes_ativadas, 1) = 0 THEN 1 ELSE 0 END) as sem_sino,
    CONCAT(
        ROUND(SUM(CASE WHEN COALESCE(notificacoes_ativadas, 1) = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 1),
        '%'
    ) as percentual_ativo
FROM users;

-- ===== TESTE 4: Simular cria√ß√£o de usu√°rio COM notifica√ß√µes =====
-- (Comentado para n√£o inserir dados reais)
/*
INSERT INTO users (name, email, password, role, status, notificacoes_ativadas)
VALUES (
    'Teste Com Sino',
    'teste.com.sino@example.com',
    '$2y$10$abcdefghijklmnopqrstuvwxyz', -- senha hash fict√≠cia
    'user',
    'active',
    1
);
SELECT 'Usu√°rio COM sino criado' as resultado;
*/

-- ===== TESTE 5: Simular cria√ß√£o de usu√°rio SEM notifica√ß√µes =====
-- (Comentado para n√£o inserir dados reais)
/*
INSERT INTO users (name, email, password, role, status, notificacoes_ativadas)
VALUES (
    'Teste Sem Sino',
    'teste.sem.sino@example.com',
    '$2y$10$abcdefghijklmnopqrstuvwxyz', -- senha hash fict√≠cia
    'user',
    'active',
    0
);
SELECT 'Usu√°rio SEM sino criado' as resultado;
*/

-- ===== TESTE 6: Atualizar usu√°rio para ATIVAR notifica√ß√µes =====
-- (Comentado - ajuste o ID conforme necess√°rio)
/*
UPDATE users 
SET notificacoes_ativadas = 1 
WHERE email = 'usuario@example.com';
SELECT CONCAT('Notifica√ß√µes ATIVADAS para: ', email) as resultado 
FROM users 
WHERE email = 'usuario@example.com';
*/

-- ===== TESTE 7: Atualizar usu√°rio para DESATIVAR notifica√ß√µes =====
-- (Comentado - ajuste o ID conforme necess√°rio)
/*
UPDATE users 
SET notificacoes_ativadas = 0 
WHERE email = 'usuario@example.com';
SELECT CONCAT('Notifica√ß√µes DESATIVADAS para: ', email) as resultado 
FROM users 
WHERE email = 'usuario@example.com';
*/

-- ===== TESTE 8: Verificar usu√°rios administradores =====
SELECT 
    '‚úÖ TESTE 8: Admins com notifica√ß√µes' as teste,
    id,
    name,
    email,
    role,
    COALESCE(notificacoes_ativadas, 1) as notif_ativadas,
    CASE 
        WHEN COALESCE(notificacoes_ativadas, 1) = 1 THEN '‚úÖ Receber√° notifica√ß√µes'
        ELSE '‚ùå N√ÉO receber√° notifica√ß√µes'
    END as status
FROM users
WHERE role = 'admin'
ORDER BY notificacoes_ativadas DESC, name;

-- ===== TESTE 9: Verificar usu√°rios com aprova√ß√µes ativadas =====
SELECT 
    '‚úÖ TESTE 9: Aprovadores x Notifica√ß√µes' as teste,
    name,
    email,
    COALESCE(pode_aprovar_pops_its, 0) as pops_its,
    COALESCE(pode_aprovar_fluxogramas, 0) as fluxogramas,
    COALESCE(pode_aprovar_amostragens, 0) as amostragens,
    COALESCE(notificacoes_ativadas, 1) as notif_ativas,
    CASE 
        WHEN COALESCE(notificacoes_ativadas, 1) = 0 
             AND (pode_aprovar_pops_its = 1 OR pode_aprovar_fluxogramas = 1 OR pode_aprovar_amostragens = 1)
        THEN '‚ö†Ô∏è ATEN√á√ÉO: Aprovador SEM notifica√ß√µes!'
        ELSE '‚úÖ OK'
    END as alerta
FROM users
WHERE pode_aprovar_pops_its = 1 
   OR pode_aprovar_fluxogramas = 1 
   OR pode_aprovar_amostragens = 1
ORDER BY notificacoes_ativadas, name;

-- ===== TESTE 10: Relat√≥rio Final =====
SELECT 
    '‚úÖ TESTE 10: Relat√≥rio Final' as teste,
    CONCAT('Total de ', COUNT(*), ' usu√°rios cadastrados') as linha1,
    CONCAT('üîî ', SUM(CASE WHEN COALESCE(notificacoes_ativadas, 1) = 1 THEN 1 ELSE 0 END), ' com sino ativo') as linha2,
    CONCAT('üîï ', SUM(CASE WHEN COALESCE(notificacoes_ativadas, 1) = 0 THEN 1 ELSE 0 END), ' com sino desativado') as linha3,
    CONCAT('üë• ', SUM(CASE WHEN role = 'admin' AND COALESCE(notificacoes_ativadas, 1) = 1 THEN 1 ELSE 0 END), ' admins com notifica√ß√µes') as linha4
FROM users;

-- ===== RESULTADO ESPERADO =====
/*
TESTE 1: Coluna deve existir com tipo TINYINT(1), DEFAULT 1
TESTE 2: Todos os usu√°rios devem aparecer com status do sino
TESTE 3: Estat√≠sticas gerais do sistema
TESTE 8: Admins devem preferencialmente ter sino ativado
TESTE 9: Aprovadores SEM notifica√ß√µes receber√£o alerta (problema potencial)
TESTE 10: Resumo geral

‚ö†Ô∏è IMPORTANTE:
- Usu√°rios aprovadores DEVEM ter notifica√ß√µes ativadas
- Caso contr√°rio, n√£o receber√£o emails de pend√™ncias
*/
